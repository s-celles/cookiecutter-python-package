{%- if cookiecutter.use_github_actions == "y" %}
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          # Reduce matrix size for efficiency
          - os: macos-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.9'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
      uses: actions/setup-python@v5
      with:
        python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: {% raw %}${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}{% endraw %}
        restore-keys: |
          {% raw %}${{ runner.os }}-pip-{% endraw %}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

{%- if cookiecutter.use_ruff == "y" %}
    - name: Lint with Ruff
      run: |
        ruff check .
        ruff format --check .
{%- endif %}

{%- if cookiecutter.use_mypy == "y" %}
    - name: Type check with MyPy
      run: |
        mypy src/{{ cookiecutter.project_slug }}
{%- endif %}

{%- if cookiecutter.use_bandit == "y" %}
    - name: Security check with Bandit
      run: |
        bandit -r src/{{ cookiecutter.project_slug }}/
{%- endif %}

{%- if cookiecutter.use_pytest == "y" %}
    - name: Test with pytest
      run: |
{%- if cookiecutter.use_coverage == "y" %}
        pytest --cov=src/{{ cookiecutter.project_slug }} --cov-report=xml --cov-report=html
{%- else %}
        pytest
{%- endif %}
{%- endif %}

{%- if cookiecutter.use_coverage == "y" and cookiecutter.use_codecov == "y" %}
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
{%- endif %}

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: python -m build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
{%- endif %}
